from enum import Enum
from typing import List, Dict


class PizzaType(Enum):
    """–í –∫–ª–∞—Å—Å–µ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω—ã –ø–∏—Ü—Ü—ã –≤–æ–∑–º–æ–∂–Ω—ã–µ –¥–ª—è –∑–∞–∫–∞–∑–∞"""
    MARGHERITA = 'MARGHERITA üßÄ'
    PEPPERONI = 'PEPPERONI üçï'
    HAWAIIAN = 'HAWAIIAN üçç'


class Size(Enum):
    """–í –∫–ª–∞—Å—Å–µ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω—ã –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã –ø–∏—Ü—Ü"""
    M = 'üçï M'
    L = 'üçïüçï L'
    XL = 'üçïüçïüçï XL'
    XXL = 'üçïüçïüçïüçï XXL'


class Recipe:
    """–ö–ª–∞—Å—Å –ø–æ–∑–≤–æ–ª—é—è—â–∏–π —Å–æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑"""

    recipes = {
        'MARGHERITA üßÄ': 'tomato sauce, mozzarella, tomatoes',
        'PEPPERONI üçï': 'tomato sauce, mozzarella, pepperoni',
        'HAWAIIAN üçç': 'tomato sauce, mozzarella, chicken, pineapples',
               }

    def __init__(self) -> None:
        self.order: List[(PizzaType, Size)] = []

    def add_pizza(self, pizza: PizzaType, size: Size) -> None:
        """–î–æ–±–∞–≤–ª—è–µ—Ç –≤ –∑–∞–∫–∞–∑ –ø–∏—Ü—Ü—É –∏–∑ –º–µ–Ω—é"""
        if not isinstance(pizza, PizzaType):
            raise ValueError
        if not isinstance(size, Size):
            raise ValueError
        self.order.append([pizza, size])

    def dict(self) -> Dict[str, str]:
        """–í—ã–≤–æ–¥–∏—Ç —Ä–µ—Ü–µ–ø—Ç—ã –ø–∏—Ü—Ü, –≤—Ö–æ–¥—è—â–∏—Ö –≤ –∑–∞–∫–∞–∑"""
        recipes_used = {}
        unique_pizza = []
        for pizza in self.order:
            if pizza[0] not in unique_pizza:
                unique_pizza.append(pizza[0])
                recipes_used[f'{pizza[0].value}'] = self.recipes[pizza[0].value]
        return recipes_used

    def __eq__(self, other) -> bool:
        """
        –°—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –∑–∞–∫–∞–∑—ã
            - True - –µ—Å–ª–∏ –∑–∞–∫–∞–∑—ã –∏–¥–µ–Ω—Ç–∏—á–Ω—ã
        """
        if isinstance(other, self.__class__):
            return self.order == other.order
        return False

    def __str__(self) -> str:
        """
        –ü–æ–¥–º–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏–∏ print
            –í—ã–≤–æ–¥–∏—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∑–∞–∫–∞–∑–∞
        """
        pizza_ = ''
        for pizza in self.order:
            pizza_ += f'–ü–∏—Ü—Ü–∞: {pizza[0].value}, —Ä–∞–∑–º–µ—Ä: {pizza[1].value} \n'
        return pizza_
